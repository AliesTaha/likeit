{"ast":null,"code":"import { useState, useRef, useEffect } from 'react';\n\nfunction attachMediaListener(query, callback) {\n  try {\n    query.addEventListener(\"change\", callback);\n    return () => query.removeEventListener(\"change\", callback);\n  } catch (e) {\n    query.addListener(callback);\n    return () => query.removeListener(callback);\n  }\n}\n\nfunction getInitialValue(query, initialValue) {\n  if (initialValue !== void 0) {\n    return initialValue;\n  }\n\n  if (typeof window !== \"undefined\" && \"matchMedia\" in window) {\n    return window.matchMedia(query).matches;\n  }\n\n  return false;\n}\n\nfunction useMediaQuery(query, initialValue) {\n  const [matches, setMatches] = useState(getInitialValue(query, initialValue));\n  const queryRef = useRef();\n  useEffect(() => {\n    if (\"matchMedia\" in window) {\n      queryRef.current = window.matchMedia(query);\n      setMatches(queryRef.current.matches);\n      return attachMediaListener(queryRef.current, event => setMatches(event.matches));\n    }\n\n    return void 0;\n  }, [query]);\n  return matches;\n}\n\nexport { useMediaQuery };","map":{"version":3,"mappings":";;AACA,SAASA,mBAAT,CAA6BC,KAA7B,EAAoCC,QAApC,EAA8C;AAC5C,MAAI;AACFD,SAAK,CAACE,gBAAN,CAAuB,QAAvB,EAAiCD,QAAjC;AACA,WAAO,MAAMD,KAAK,CAACG,mBAAN,CAA0B,QAA1B,EAAoCF,QAApC,CAAb;AACD,GAHD,CAGE,OAAOG,CAAP,EAAU;AACVJ,SAAK,CAACK,WAAN,CAAkBJ,QAAlB;AACA,WAAO,MAAMD,KAAK,CAACM,cAAN,CAAqBL,QAArB,CAAb;AACD;AACF;;AACD,SAASM,eAAT,CAAyBP,KAAzB,EAAgCQ,YAAhC,EAA8C;AAC5C,MAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAC3B,WAAOA,YAAP;AACD;;AACD,MAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,gBAAgBA,MAArD,EAA6D;AAC3D,WAAOA,MAAM,CAACC,UAAP,CAAkBV,KAAlB,EAAyBW,OAAhC;AACD;;AACD,SAAO,KAAP;AACD;;AACM,SAASC,aAAT,CAAuBZ,KAAvB,EAA8BQ,YAA9B,EAA4C;AACjD,QAAM,CAACG,OAAD,EAAUE,UAAV,IAAwBC,QAAQ,CAACP,eAAe,CAACP,KAAD,EAAQQ,YAAR,CAAhB,CAAtC;AACA,QAAMO,QAAQ,GAAGC,MAAM,EAAvB;AACAC,WAAS,CAAC,MAAM;AACd,QAAI,gBAAgBR,MAApB,EAA4B;AAC1BM,cAAQ,CAACG,OAAT,GAAmBT,MAAM,CAACC,UAAP,CAAkBV,KAAlB,CAAnB;AACAa,gBAAU,CAACE,QAAQ,CAACG,OAAT,CAAiBP,OAAlB,CAAV;AACA,aAAOZ,mBAAmB,CAACgB,QAAQ,CAACG,OAAV,EAAoBC,KAAD,IAAWN,UAAU,CAACM,KAAK,CAACR,OAAP,CAAxC,CAA1B;AACD;;AACD,WAAO,KAAK,CAAZ;AACD,GAPQ,EAON,CAACX,KAAD,CAPM,CAAT;AAQA,SAAOW,OAAP;AACF","names":["attachMediaListener","query","callback","addEventListener","removeEventListener","e","addListener","removeListener","getInitialValue","initialValue","window","matchMedia","matches","useMediaQuery","setMatches","useState","queryRef","useRef","useEffect","current","event"],"sources":["/Users/alies/Desktop/University/Projects/likeit/node_modules/@mantine/hooks/src/use-media-query/use-media-query.ts"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\ntype MediaQueryCallback = (event: { matches: boolean; media: string }) => void;\n\n/**\n * Older versions of Safari (shipped withCatalina and before) do not support addEventListener on matchMedia\n * https://stackoverflow.com/questions/56466261/matchmedia-addlistener-marked-as-deprecated-addeventlistener-equivalent\n * */\nfunction attachMediaListener(query: MediaQueryList, callback: MediaQueryCallback) {\n  try {\n    query.addEventListener('change', callback);\n    return () => query.removeEventListener('change', callback);\n  } catch (e) {\n    query.addListener(callback);\n    return () => query.removeListener(callback);\n  }\n}\n\nfunction getInitialValue(query: string, initialValue?: boolean) {\n  if (initialValue !== undefined) {\n    return initialValue;\n  }\n\n  if (typeof window !== 'undefined' && 'matchMedia' in window) {\n    return window.matchMedia(query).matches;\n  }\n\n  return false;\n}\n\nexport function useMediaQuery(query: string, initialValue?: boolean) {\n  const [matches, setMatches] = useState(getInitialValue(query, initialValue));\n  const queryRef = useRef<MediaQueryList>();\n\n  useEffect(() => {\n    if ('matchMedia' in window) {\n      queryRef.current = window.matchMedia(query);\n      setMatches(queryRef.current.matches);\n      return attachMediaListener(queryRef.current, (event) => setMatches(event.matches));\n    }\n\n    return undefined;\n  }, [query]);\n\n  return matches;\n}\n"]},"metadata":{},"sourceType":"module"}