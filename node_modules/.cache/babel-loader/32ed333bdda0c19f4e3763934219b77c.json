{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { useUncontrolled, useMove, useMergedRef } from '@mantine/hooks';\nimport { useMantineDefaultProps, useMantineTheme } from '@mantine/styles';\nimport { getClientPosition } from '../utils/get-client-position/get-client-position.js';\nimport { getPosition } from '../utils/get-position/get-position.js';\nimport { getChangeValue } from '../utils/get-change-value/get-change-value.js';\nimport { Thumb } from '../Thumb/Thumb.js';\nimport { Track } from '../Track/Track.js';\nimport { SliderRoot } from '../SliderRoot/SliderRoot.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  size: \"md\",\n  radius: \"xl\",\n  min: 0,\n  max: 100,\n  minRange: 10,\n  step: 1,\n  marks: [],\n  label: f => f,\n  labelTransition: \"skew-down\",\n  labelTransitionDuration: 0,\n  labelAlwaysOn: false,\n  thumbFromLabel: \"\",\n  thumbToLabel: \"\",\n  showLabelOnHover: true,\n  disabled: false\n};\nconst RangeSlider = forwardRef((props, ref) => {\n  const _a = useMantineDefaultProps(\"RangeSlider\", defaultProps, props),\n        {\n    classNames,\n    styles,\n    color,\n    value,\n    onChange,\n    onChangeEnd,\n    size,\n    radius,\n    min,\n    max,\n    minRange,\n    step,\n    precision,\n    defaultValue,\n    name,\n    marks,\n    label,\n    labelTransition,\n    labelTransitionDuration,\n    labelTransitionTimingFunction,\n    labelAlwaysOn,\n    thumbFromLabel,\n    thumbToLabel,\n    showLabelOnHover,\n    thumbChildren,\n    disabled\n  } = _a,\n        others = __objRest(_a, [\"classNames\", \"styles\", \"color\", \"value\", \"onChange\", \"onChangeEnd\", \"size\", \"radius\", \"min\", \"max\", \"minRange\", \"step\", \"precision\", \"defaultValue\", \"name\", \"marks\", \"label\", \"labelTransition\", \"labelTransitionDuration\", \"labelTransitionTimingFunction\", \"labelAlwaysOn\", \"thumbFromLabel\", \"thumbToLabel\", \"showLabelOnHover\", \"thumbChildren\", \"disabled\"]);\n\n  const theme = useMantineTheme();\n  const [focused, setFocused] = useState(-1);\n  const [hovered, setHovered] = useState(false);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [min, max],\n    rule: val => Array.isArray(val),\n    onChange\n  });\n  const valueRef = useRef(_value);\n  const thumbs = useRef([]);\n  const thumbIndex = useRef(void 0);\n  const positions = [getPosition({\n    value: _value[0],\n    min,\n    max\n  }), getPosition({\n    value: _value[1],\n    min,\n    max\n  })];\n\n  const _setValue = val => {\n    setValue(val);\n    valueRef.current = val;\n  };\n\n  useEffect(() => {\n    if (Array.isArray(value)) {\n      valueRef.current = value;\n    }\n  }, Array.isArray(value) ? [value[0], value[1]] : [null, null]);\n\n  const setRangedValue = (val, index, triggerChangeEnd) => {\n    const clone = [...valueRef.current];\n    clone[index] = val;\n\n    if (index === 0) {\n      if (val > clone[1] - minRange) {\n        clone[1] = Math.min(val + minRange, max);\n      }\n\n      if (val > (max - minRange || min)) {\n        clone[index] = valueRef.current[index];\n      }\n    }\n\n    if (index === 1) {\n      if (val < clone[0] + minRange) {\n        clone[0] = Math.max(val - minRange, min);\n      }\n\n      if (val < clone[0] + minRange) {\n        clone[index] = valueRef.current[index];\n      }\n    }\n\n    _setValue(clone);\n\n    if (triggerChangeEnd) {\n      onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current);\n    }\n  };\n\n  const handleChange = val => {\n    if (!disabled) {\n      const nextValue = getChangeValue({\n        value: val,\n        min,\n        max,\n        step,\n        precision\n      });\n      setRangedValue(nextValue, thumbIndex.current, false);\n    }\n  };\n\n  const {\n    ref: container,\n    active\n  } = useMove(_ref => {\n    let {\n      x\n    } = _ref;\n    return handleChange(x);\n  }, {\n    onScrubEnd: () => onChangeEnd == null ? void 0 : onChangeEnd(valueRef.current)\n  }, theme.dir);\n\n  function handleThumbMouseDown(event, index) {\n    if (event.cancelable) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    thumbIndex.current = index;\n  }\n\n  const handleTrackMouseDownCapture = event => {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    container.current.focus();\n    const rect = container.current.getBoundingClientRect();\n    const changePosition = getClientPosition(event.nativeEvent);\n    const changeValue = getChangeValue({\n      value: changePosition - rect.left,\n      max,\n      min,\n      step,\n      containerWidth: rect.width\n    });\n    const nearestHandle = Math.abs(_value[0] - changeValue) > Math.abs(_value[1] - changeValue) ? 1 : 0;\n\n    const _nearestHandle = theme.dir === \"ltr\" ? nearestHandle : nearestHandle === 1 ? 0 : 1;\n\n    thumbIndex.current = _nearestHandle;\n  };\n\n  const getFocusedThumbIndex = () => {\n    if (focused !== 1 && focused !== 0) {\n      setFocused(0);\n      return 0;\n    }\n\n    return focused;\n  };\n\n  const handleTrackKeydownCapture = event => {\n    if (!disabled) {\n      switch (event.nativeEvent.code) {\n        case \"ArrowUp\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(Math.min(Math.max(valueRef.current[focusedIndex] + step, min), max), focusedIndex, true);\n            break;\n          }\n\n        case \"ArrowRight\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(Math.min(Math.max(theme.dir === \"rtl\" ? valueRef.current[focusedIndex] - step : valueRef.current[focusedIndex] + step, min), max), focusedIndex, true);\n            break;\n          }\n\n        case \"ArrowDown\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(Math.min(Math.max(valueRef.current[focusedIndex] - step, min), max), focusedIndex, true);\n            break;\n          }\n\n        case \"ArrowLeft\":\n          {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(Math.min(Math.max(theme.dir === \"rtl\" ? valueRef.current[focusedIndex] + step : valueRef.current[focusedIndex] - step, min), max), focusedIndex, true);\n            break;\n          }\n      }\n    }\n  };\n\n  const sharedThumbProps = {\n    max,\n    min,\n    color,\n    size,\n    labelTransition,\n    labelTransitionDuration,\n    labelTransitionTimingFunction,\n    labelAlwaysOn,\n    onBlur: () => setFocused(-1),\n    classNames,\n    styles\n  };\n  const hasArrayThumbChildren = Array.isArray(thumbChildren);\n  return /* @__PURE__ */React.createElement(SliderRoot, __spreadProps(__spreadValues({}, others), {\n    size,\n    ref: useMergedRef(container, ref),\n    onTouchStartCapture: handleTrackMouseDownCapture,\n    onTouchEndCapture: () => {\n      thumbIndex.current = -1;\n    },\n    onMouseDownCapture: handleTrackMouseDownCapture,\n    onMouseUpCapture: () => {\n      thumbIndex.current = -1;\n    },\n    onKeyDownCapture: handleTrackKeydownCapture,\n    styles,\n    classNames,\n    disabled\n  }), /* @__PURE__ */React.createElement(Track, {\n    offset: positions[0],\n    marksOffset: _value[0],\n    filled: positions[1] - positions[0],\n    marks,\n    size,\n    radius,\n    color,\n    min,\n    max,\n    value: _value[1],\n    styles,\n    classNames,\n    onMouseEnter: showLabelOnHover ? () => setHovered(true) : void 0,\n    onMouseLeave: showLabelOnHover ? () => setHovered(false) : void 0,\n    onChange: val => {\n      const nearestValue = Math.abs(_value[0] - val) > Math.abs(_value[1] - val) ? 1 : 0;\n      const clone = [..._value];\n      clone[nearestValue] = val;\n\n      _setValue(clone);\n    },\n    disabled\n  }, /* @__PURE__ */React.createElement(Thumb, __spreadProps(__spreadValues({}, sharedThumbProps), {\n    value: _value[0],\n    position: positions[0],\n    dragging: active,\n    label: typeof label === \"function\" ? label(_value[0]) : label,\n    ref: node => {\n      thumbs.current[0] = node;\n    },\n    thumbLabel: thumbFromLabel,\n    onMouseDown: event => handleThumbMouseDown(event, 0),\n    onFocus: () => setFocused(0),\n    showLabelOnHover: showLabelOnHover && hovered,\n    disabled\n  }), hasArrayThumbChildren ? thumbChildren[0] : thumbChildren), /* @__PURE__ */React.createElement(Thumb, __spreadProps(__spreadValues({}, sharedThumbProps), {\n    thumbLabel: thumbToLabel,\n    value: _value[1],\n    position: positions[1],\n    dragging: active,\n    label: typeof label === \"function\" ? label(_value[1]) : label,\n    ref: node => {\n      thumbs.current[1] = node;\n    },\n    onMouseDown: event => handleThumbMouseDown(event, 1),\n    onFocus: () => setFocused(1),\n    showLabelOnHover: showLabelOnHover && hovered,\n    disabled\n  }), hasArrayThumbChildren ? thumbChildren[1] : thumbChildren)), /* @__PURE__ */React.createElement(\"input\", {\n    type: \"hidden\",\n    name: `${name}_from`,\n    value: _value[0]\n  }), /* @__PURE__ */React.createElement(\"input\", {\n    type: \"hidden\",\n    name: `${name}_to`,\n    value: _value[1]\n  }));\n});\nRangeSlider.displayName = \"@mantine/core/RangeSlider\";\nexport { RangeSlider };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","defaultProps","size","radius","min","max","minRange","step","marks","label","f","labelTransition","labelTransitionDuration","labelAlwaysOn","thumbFromLabel","thumbToLabel","showLabelOnHover","disabled","RangeSlider","forwardRef","props","ref","_a","useMantineDefaultProps","classNames","styles","color","onChange","onChangeEnd","precision","defaultValue","name","labelTransitionTimingFunction","thumbChildren","others","theme","useMantineTheme","focused","setFocused","useState","hovered","setHovered","_value","setValue","useUncontrolled","finalValue","rule","val","Array","isArray","valueRef","useRef","thumbs","thumbIndex","positions","getPosition","_setValue","current","useEffect","setRangedValue","index","triggerChangeEnd","clone","Math","handleChange","nextValue","getChangeValue","container","active","useMove","x","onScrubEnd","dir","handleThumbMouseDown","event","cancelable","preventDefault","stopPropagation","handleTrackMouseDownCapture","focus","rect","getBoundingClientRect","changePosition","getClientPosition","nativeEvent","changeValue","left","containerWidth","width","nearestHandle","abs","_nearestHandle","getFocusedThumbIndex","handleTrackKeydownCapture","code","focusedIndex","sharedThumbProps","onBlur","hasArrayThumbChildren","React","createElement","SliderRoot","useMergedRef","onTouchStartCapture","onTouchEndCapture","onMouseDownCapture","onMouseUpCapture","onKeyDownCapture","Track","offset","marksOffset","filled","onMouseEnter","onMouseLeave","nearestValue","Thumb","position","dragging","node","thumbLabel","onMouseDown","onFocus","type","displayName"],"sources":["/Users/alies/Desktop/University/Projects/likeit/node_modules/@mantine/core/src/components/Slider/RangeSlider/RangeSlider.tsx"],"sourcesContent":["import React, { useRef, useState, forwardRef, useEffect } from 'react';\nimport { useMove, useUncontrolled, useMergedRef } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineColor,\n  useMantineTheme,\n  useMantineDefaultProps,\n} from '@mantine/styles';\nimport { MantineTransition } from '../../Transition';\nimport { getClientPosition } from '../utils/get-client-position/get-client-position';\nimport { getPosition } from '../utils/get-position/get-position';\nimport { getChangeValue } from '../utils/get-change-value/get-change-value';\nimport { Thumb, ThumbStylesNames } from '../Thumb/Thumb';\nimport { Track, TrackStylesNames } from '../Track/Track';\nimport { MarksStylesNames } from '../Marks/Marks';\nimport { SliderRoot, SliderRootStylesNames } from '../SliderRoot/SliderRoot';\n\nexport type RangeSliderStylesNames =\n  | SliderRootStylesNames\n  | ThumbStylesNames\n  | TrackStylesNames\n  | MarksStylesNames;\n\ntype Value = [number, number];\n\nexport interface RangeSliderProps\n  extends DefaultProps<RangeSliderStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange' | 'defaultValue'> {\n  /** Color from theme.colors */\n  color?: MantineColor;\n\n  /** Track border-radius from theme or number to set border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Predefined track and thumb size, number to set sizes in px */\n  size?: MantineNumberSize;\n\n  /** Minimal possible value */\n  min?: number;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Minimal range interval */\n  minRange?: number;\n\n  /** Number by which value will be incremented/decremented with thumb drag and arrows */\n  step?: number;\n\n  /** Amount of digits after the decimal point */\n  precision?: number;\n\n  /** Current value for controlled slider */\n  value?: Value;\n\n  /** Default value for uncontrolled slider */\n  defaultValue?: Value;\n\n  /** Called each time value changes */\n  onChange?(value: Value): void;\n\n  /** Called when user stops dragging slider or changes value with arrows */\n  onChangeEnd?(value: Value): void;\n\n  /** Hidden input name, use with uncontrolled variant */\n  name?: string;\n\n  /** Marks which will be placed on the track */\n  marks?: { value: number; label?: React.ReactNode }[];\n\n  /** Function to generate label or any react node to render instead, set to null to disable label */\n  label?: React.ReactNode | ((value: number) => React.ReactNode);\n\n  /** Label appear/disappear transition */\n  labelTransition?: MantineTransition;\n\n  /** Label appear/disappear transition duration in ms */\n  labelTransitionDuration?: number;\n\n  /** Label appear/disappear transition timing function, defaults to theme.transitionRimingFunction */\n  labelTransitionTimingFunction?: string;\n\n  /** If true label will be not be hidden when user stops dragging */\n  labelAlwaysOn?: boolean;\n\n  /** First thumb aria-label */\n  thumbFromLabel?: string;\n\n  /** Second thumb aria-label */\n  thumbToLabel?: string;\n\n  /**If true slider label will appear on hover */\n  showLabelOnHover?: boolean;\n\n  /** Thumbs children, can be used to add icons */\n  thumbChildren?: React.ReactNode;\n\n  /** Disables slider */\n  disabled?: boolean;\n}\n\nconst defaultProps: Partial<RangeSliderProps> = {\n  size: 'md',\n  radius: 'xl',\n  min: 0,\n  max: 100,\n  minRange: 10,\n  step: 1,\n  marks: [],\n  label: (f) => f,\n  labelTransition: 'skew-down',\n  labelTransitionDuration: 0,\n  labelAlwaysOn: false,\n  thumbFromLabel: '',\n  thumbToLabel: '',\n  showLabelOnHover: true,\n  disabled: false,\n};\n\nexport const RangeSlider = forwardRef<HTMLDivElement, RangeSliderProps>(\n  (props: RangeSliderProps, ref) => {\n    const {\n      classNames,\n      styles,\n      color,\n      value,\n      onChange,\n      onChangeEnd,\n      size,\n      radius,\n      min,\n      max,\n      minRange,\n      step,\n      precision,\n      defaultValue,\n      name,\n      marks,\n      label,\n      labelTransition,\n      labelTransitionDuration,\n      labelTransitionTimingFunction,\n      labelAlwaysOn,\n      thumbFromLabel,\n      thumbToLabel,\n      showLabelOnHover,\n      thumbChildren,\n      disabled,\n      ...others\n    } = useMantineDefaultProps('RangeSlider', defaultProps, props);\n\n    const theme = useMantineTheme();\n    const [focused, setFocused] = useState(-1);\n    const [hovered, setHovered] = useState(false);\n    const [_value, setValue] = useUncontrolled<Value>({\n      value,\n      defaultValue,\n      finalValue: [min, max],\n      rule: (val) => Array.isArray(val),\n      onChange,\n    });\n    const valueRef = useRef(_value);\n    const thumbs = useRef<HTMLDivElement[]>([]);\n    const thumbIndex = useRef<number>(undefined);\n    const positions = [\n      getPosition({ value: _value[0], min, max }),\n      getPosition({ value: _value[1], min, max }),\n    ];\n\n    const _setValue = (val: Value) => {\n      setValue(val);\n      valueRef.current = val;\n    };\n\n    useEffect(\n      () => {\n        if (Array.isArray(value)) {\n          valueRef.current = value;\n        }\n      },\n      Array.isArray(value) ? [value[0], value[1]] : [null, null]\n    );\n\n    const setRangedValue = (val: number, index: number, triggerChangeEnd: boolean) => {\n      const clone: Value = [...valueRef.current];\n      clone[index] = val;\n\n      if (index === 0) {\n        if (val > clone[1] - minRange) {\n          clone[1] = Math.min(val + minRange, max);\n        }\n\n        if (val > (max - minRange || min)) {\n          clone[index] = valueRef.current[index];\n        }\n      }\n\n      if (index === 1) {\n        if (val < clone[0] + minRange) {\n          clone[0] = Math.max(val - minRange, min);\n        }\n\n        if (val < clone[0] + minRange) {\n          clone[index] = valueRef.current[index];\n        }\n      }\n\n      _setValue(clone);\n\n      if (triggerChangeEnd) {\n        onChangeEnd?.(valueRef.current);\n      }\n    };\n\n    const handleChange = (val: number) => {\n      if (!disabled) {\n        const nextValue = getChangeValue({ value: val, min, max, step, precision });\n        setRangedValue(nextValue, thumbIndex.current, false);\n      }\n    };\n\n    const { ref: container, active } = useMove(\n      ({ x }) => handleChange(x),\n      { onScrubEnd: () => onChangeEnd?.(valueRef.current) },\n      theme.dir\n    );\n\n    function handleThumbMouseDown(\n      event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>,\n      index: number\n    ) {\n      if (event.cancelable) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      thumbIndex.current = index;\n    }\n\n    const handleTrackMouseDownCapture = (\n      event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>\n    ) => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n\n      container.current.focus();\n      const rect = container.current.getBoundingClientRect();\n      const changePosition = getClientPosition(event.nativeEvent);\n      const changeValue = getChangeValue({\n        value: changePosition - rect.left,\n        max,\n        min,\n        step,\n        containerWidth: rect.width,\n      });\n\n      const nearestHandle =\n        Math.abs(_value[0] - changeValue) > Math.abs(_value[1] - changeValue) ? 1 : 0;\n      const _nearestHandle = theme.dir === 'ltr' ? nearestHandle : nearestHandle === 1 ? 0 : 1;\n\n      thumbIndex.current = _nearestHandle;\n    };\n\n    const getFocusedThumbIndex = () => {\n      if (focused !== 1 && focused !== 0) {\n        setFocused(0);\n        return 0;\n      }\n\n      return focused;\n    };\n\n    const handleTrackKeydownCapture = (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (!disabled) {\n        switch (event.nativeEvent.code) {\n          case 'ArrowUp': {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(\n              Math.min(Math.max(valueRef.current[focusedIndex] + step, min), max),\n              focusedIndex,\n              true\n            );\n            break;\n          }\n          case 'ArrowRight': {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(\n              Math.min(\n                Math.max(\n                  theme.dir === 'rtl'\n                    ? valueRef.current[focusedIndex] - step\n                    : valueRef.current[focusedIndex] + step,\n                  min\n                ),\n                max\n              ),\n              focusedIndex,\n              true\n            );\n            break;\n          }\n\n          case 'ArrowDown': {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(\n              Math.min(Math.max(valueRef.current[focusedIndex] - step, min), max),\n              focusedIndex,\n              true\n            );\n            break;\n          }\n          case 'ArrowLeft': {\n            event.preventDefault();\n            const focusedIndex = getFocusedThumbIndex();\n            thumbs.current[focusedIndex].focus();\n            setRangedValue(\n              Math.min(\n                Math.max(\n                  theme.dir === 'rtl'\n                    ? valueRef.current[focusedIndex] + step\n                    : valueRef.current[focusedIndex] - step,\n                  min\n                ),\n                max\n              ),\n              focusedIndex,\n              true\n            );\n            break;\n          }\n\n          default: {\n            break;\n          }\n        }\n      }\n    };\n\n    const sharedThumbProps = {\n      max,\n      min,\n      color,\n      size,\n      labelTransition,\n      labelTransitionDuration,\n      labelTransitionTimingFunction,\n      labelAlwaysOn,\n      onBlur: () => setFocused(-1),\n      classNames,\n      styles,\n    };\n\n    const hasArrayThumbChildren = Array.isArray(thumbChildren);\n\n    return (\n      <SliderRoot\n        {...others}\n        size={size}\n        ref={useMergedRef(container, ref)}\n        onTouchStartCapture={handleTrackMouseDownCapture}\n        onTouchEndCapture={() => {\n          thumbIndex.current = -1;\n        }}\n        onMouseDownCapture={handleTrackMouseDownCapture}\n        onMouseUpCapture={() => {\n          thumbIndex.current = -1;\n        }}\n        onKeyDownCapture={handleTrackKeydownCapture}\n        styles={styles}\n        classNames={classNames}\n        disabled={disabled}\n      >\n        <Track\n          offset={positions[0]}\n          marksOffset={_value[0]}\n          filled={positions[1] - positions[0]}\n          marks={marks}\n          size={size}\n          radius={radius}\n          color={color}\n          min={min}\n          max={max}\n          value={_value[1]}\n          styles={styles}\n          classNames={classNames}\n          onMouseEnter={showLabelOnHover ? () => setHovered(true) : undefined}\n          onMouseLeave={showLabelOnHover ? () => setHovered(false) : undefined}\n          onChange={(val) => {\n            const nearestValue = Math.abs(_value[0] - val) > Math.abs(_value[1] - val) ? 1 : 0;\n            const clone: Value = [..._value];\n            clone[nearestValue] = val;\n            _setValue(clone);\n          }}\n          disabled={disabled}\n        >\n          <Thumb\n            {...sharedThumbProps}\n            value={_value[0]}\n            position={positions[0]}\n            dragging={active}\n            label={typeof label === 'function' ? label(_value[0]) : label}\n            ref={(node) => {\n              thumbs.current[0] = node;\n            }}\n            thumbLabel={thumbFromLabel}\n            onMouseDown={(event) => handleThumbMouseDown(event, 0)}\n            onFocus={() => setFocused(0)}\n            showLabelOnHover={showLabelOnHover && hovered}\n            disabled={disabled}\n          >\n            {hasArrayThumbChildren ? thumbChildren[0] : thumbChildren}\n          </Thumb>\n\n          <Thumb\n            {...sharedThumbProps}\n            thumbLabel={thumbToLabel}\n            value={_value[1]}\n            position={positions[1]}\n            dragging={active}\n            label={typeof label === 'function' ? label(_value[1]) : label}\n            ref={(node) => {\n              thumbs.current[1] = node;\n            }}\n            onMouseDown={(event) => handleThumbMouseDown(event, 1)}\n            onFocus={() => setFocused(1)}\n            showLabelOnHover={showLabelOnHover && hovered}\n            disabled={disabled}\n          >\n            {hasArrayThumbChildren ? thumbChildren[1] : thumbChildren}\n          </Thumb>\n        </Track>\n\n        <input type=\"hidden\" name={`${name}_from`} value={_value[0]} />\n        <input type=\"hidden\" name={`${name}_to`} value={_value[1]} />\n      </SliderRoot>\n    );\n  }\n);\n\nRangeSlider.displayName = '@mantine/core/RangeSlider';\n"]},"metadata":{},"sourceType":"module"}